try {
  let { classes: Cc, interfaces: Ci, manager: Cm } = Components;
  const Services = globalThis.Services;

  function ConfigJS() {
    Services.obs.addObserver(this, 'chrome-document-global-created', false);
  }

  ConfigJS.prototype = {
    observe: function (aSubject) {
      aSubject.addEventListener('DOMContentLoaded', this, { once: true });
    },
    handleEvent: function (aEvent) {
      let document = aEvent.originalTarget;
      let window = document.defaultView;
      let location = window.location;

      if (/^(chrome:(?!\/\/(global\/content\/commonDialog|browser\/content\/webext-panels)\.x?html)|about:(?!blank))/i.test(location.href)) {
        if (window.Tabbrowser) {
          // Ctrl+T
          let keyNewTab = document.getElementById('key_newNavigatorTab');
          if (keyNewTab) keyNewTab.remove();

          // Ctrl+R
          //let keyReload = document.getElementById('key_reload');
          //if (keyReload) keyReload.remove();

          // Ctrl+Shift+T (Restore Closed Tab)
          let keyRestoreTab = document.getElementById('key_restoreLastClosedTabOrWindowOrSession');
          if (keyRestoreTab) keyRestoreTab.remove();
        }
      }
    }
  };

  if (!Services.appinfo.inSafeMode) {
    new ConfigJS();
  }
} catch (ex) {
  // Ignore errors silently
}
